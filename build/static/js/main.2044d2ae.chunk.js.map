{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","console","log","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"+OAOaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACHC,IAAMC,IALpB,kDAK4B,CAC/BC,OAAO,CACHC,EAAEL,EACFM,MAAM,SACNC,MARG,sCAGa,uBACjBC,EADiB,EACjBA,KADiB,kBAQjBA,GARiB,2CAAH,sDCkDVC,G,MArDH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPV,EADO,KACDW,EADC,OAEcD,mBAAS,IAFvB,mBAEPE,EAFO,KAECC,EAFD,KAGRC,EAAM,uCAAG,WAAMC,GAAN,eAAAd,EAAA,yDACE,UAAVc,EAAEC,IADM,gCAEYjB,EAAaC,GAFzB,OAEDQ,EAFC,OAGPS,QAAQC,IAAIV,GACZK,EAAWL,GACXG,EAAS,IALF,2CAAH,sDAWZ,OACG,yBAAKQ,UAAU,kBACX,2BACKC,KAAK,OACLD,UAAU,SACVE,YAAY,WACZC,MAAOtB,EACPuB,SAAU,SAACR,GAAD,OAAMJ,EAASI,EAAES,OAAOF,QAClCG,WAAYX,IAKhBF,EAAQc,MACL,yBAAKP,UAAU,QACX,wBAAIA,UAAU,aACd,8BACKP,EAAQe,MAEb,6BAAMf,EAAQgB,IAAIC,UAElB,yBAAKV,UAAU,aACVW,KAAKC,MAAMnB,EAAQc,KAAKM,MACzB,uCAGR,yBAAKb,UAAU,QACf,yBAAKA,UAAU,YAAYc,IAAG,4CAAuCrB,EAAQA,QAAQ,GAAGsB,KAA1D,WAAyEC,IAAKvB,EAAQA,QAAQ,GAAGwB,cAC/H,2BAAIxB,EAAQA,QAAQ,GAAGwB,kBCxCtCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2044d2ae.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst URL ='https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY ='9883ddb00120a9a21c485e31fafece2b';\r\n\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const {data} = await axios.get(URL,{\r\n        params:{\r\n            q:query,\r\n            units:'metric',\r\n            APPID:API_KEY,\r\n        }\r\n    })\r\n    return data;\r\n\r\n}\r\n","import React,{useState} from 'react';\r\nimport {fetchWeather} from './api/fetchWeather';\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    const [query,setQuery]  = useState('');\r\n    const [weather,setWeather] =useState({})\r\n    const search = async(e) => {\r\n        if(e.key === 'Enter'){\r\n            const data = await fetchWeather(query)\r\n            console.log(data);\r\n            setWeather(data)\r\n            setQuery('');\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n       <div className=\"main-container\" >\r\n           <input\r\n                type=\"text\"\r\n                className=\"search\"\r\n                placeholder=\"Search..\"\r\n                value={query}\r\n                onChange={(e)=> setQuery(e.target.value)}\r\n                onKeyPress={search}\r\n           \r\n           \r\n           \r\n           />\r\n           {weather.main && (\r\n               <div className=\"city\">\r\n                   <h2 className=\"city-name\">\r\n                   <span>\r\n                       {weather.name}\r\n                   </span>\r\n                   <sup>{weather.sys.country}</sup>\r\n                   </h2>\r\n                   <div className=\"city-temp\">\r\n                       {Math.round(weather.main.temp)}\r\n                       <sup>&deg;C</sup> \r\n\r\n               </div>\r\n               <div className='info'>\r\n               <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\r\n               <p>{weather.weather[0].description}</p>\r\n                </div>\r\n               </div>\r\n           )}\r\n\r\n       </div>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(<App  />,document.getElementById('root'));"],"sourceRoot":""}